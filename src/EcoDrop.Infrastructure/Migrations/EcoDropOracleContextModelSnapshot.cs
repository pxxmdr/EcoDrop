// <auto-generated />
using EcoDrop.Infrastructure.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EcoDrop.Infrastructure.Migrations
{
    [DbContext(typeof(EcoDropOracleContext))]
    partial class EcoDropOracleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoDrop.Domain.Entities.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("RM555306_MATERIALTYPES", (string)null);
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.OpeningHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CloseTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("OpenTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RecyclingPointId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RecyclingPointId");

                    b.ToTable("RM555306_OPENINGHOURS", (string)null);
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.RecyclingPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("RM555306_RECYCLINGPOINTS", (string)null);
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.RecyclingPointMaterialType", b =>
                {
                    b.Property<int>("RecyclingPointId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("RecyclingPointId", "MaterialTypeId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("RM555306_RPMATERIALTYPES", (string)null);
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.OpeningHour", b =>
                {
                    b.HasOne("EcoDrop.Domain.Entities.RecyclingPoint", "RecyclingPoint")
                        .WithMany("OpeningHours")
                        .HasForeignKey("RecyclingPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecyclingPoint");
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.RecyclingPointMaterialType", b =>
                {
                    b.HasOne("EcoDrop.Domain.Entities.MaterialType", "MaterialType")
                        .WithMany("RecyclingPoints")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoDrop.Domain.Entities.RecyclingPoint", "RecyclingPoint")
                        .WithMany("Materials")
                        .HasForeignKey("RecyclingPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");

                    b.Navigation("RecyclingPoint");
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.MaterialType", b =>
                {
                    b.Navigation("RecyclingPoints");
                });

            modelBuilder.Entity("EcoDrop.Domain.Entities.RecyclingPoint", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("OpeningHours");
                });
#pragma warning restore 612, 618
        }
    }
}
